r.newmodel = cor(mean,prediction.newmodel),
rmse.newmodel = rmse(mean*100,prediction.newmodel*100)
) %>%
mutate_all(funs(round(.,2)))
df.criticality = df.regression %>%
ungroup() %>%
filter(index == 'criticality') %>%
mutate(mean = mean/100) %>%
mutate(prediction.criticality = glm(mean~criticality,data=.,family=binomial(link='logit'))$fitted.values)
df.criticality %>%
select(mean,prediction.criticality) %>%
# correlate()
summarise(r.criticality = cor(mean,prediction.criticality),
rmse.criticality = rmse(mean*100,prediction.criticality*100)
) %>%
mutate_all(funs(round(.,2)))
# Plot: Just data  -------------------------------------------------------------------------------
judgment_type = 'responsibility'
# judgment_type = 'criticality'
df.long %>%
filter(index == judgment_type) %>%
ggplot(aes(x=trial,y=rating))+
stat_summary(fun.data = mean_cl_boot, geom = 'linerange', size = 0.5)+
stat_summary(fun.y = mean, geom = 'line', size = 1)+
stat_summary(fun.y = mean, geom = 'point', size = 2)+
geom_point(alpha = 0.2, position = position_jitter(width = 0.1, height = 0))+
# geom_line(aes(group=participant),size=0.5,alpha=0.2)+
labs(y = judgment_type, x = 'trial')+
scale_x_continuous(breaks = 0:15,labels = 0:15)+
theme_bw()+
theme(text = element_text(size = 30),
panel.grid = element_blank())
# ggsave(paste0("../../figures/plots/",judgment_type,"_judgments.pdf"),width=12,height=4)
# Plot: Responsibility judgments with models  -------------------------------------------------------------------------------
judgment_type = 'responsibility'
df.long %>%
filter(index == judgment_type) %>%
ggplot(aes(x=trial,y=rating))+
stat_summary(fun.data = mean_cl_boot, geom = 'linerange', size = 0.5)+
stat_summary(fun.y = mean, geom = 'line', size = 1)+
stat_summary(fun.y = mean, geom = 'point', size = 2)+
geom_point(alpha = 0.2, position = position_jitter(width = 0.1, height = 0))+
# geom_line(aes(group=participant),size=0.5,alpha=0.2)+
geom_line(aes(x = trial, y = prediction.alternative*100),data=df.responsibility,color='red',alpha=0.5,size=2)+
geom_point(aes(x = trial, y = prediction.alternative*100),data=df.responsibility,color='red',alpha=0.5,size=3)+
geom_line(aes(x = trial, y = prediction.newmodel*100),data=df.responsibility,color='blue',alpha=0.5,size=2)+
geom_point(aes(x = trial, y = prediction.newmodel*100),data=df.responsibility,color='blue',alpha=0.5,size=3)+
labs(y = judgment_type, x = 'trial')+
scale_x_continuous(breaks = 0:15,labels = 0:15)+
theme_bw()+
theme(text = element_text(size = 30),
panel.grid = element_blank())
# ggsave(paste0("../../figures/plots/",judgment_type,"_judgments_model.pdf"),width=12,height=4)
# Plot: Criticality judgments with model  -------------------------------------------------------------------------------
judgment_type = 'criticality'
df.long %>%
filter(index == judgment_type) %>%
ggplot(aes(x=trial,y=rating))+
stat_summary(fun.data = mean_cl_boot, geom = 'linerange', size = 0.5)+
stat_summary(fun.y = mean, geom = 'line', size = 1)+
stat_summary(fun.y = mean, geom = 'point', size = 2)+
geom_point(alpha = 0.2, position = position_jitter(width = 0.1, height = 0))+
# geom_line(aes(group=participant),size=0.5,alpha=0.2)+
geom_line(aes(x = trial, y = prediction.criticality*100),data=df.criticality,color='green',alpha=0.5,size=2)+
geom_point(aes(x = trial, y = prediction.criticality*100),data=df.criticality,color='green',alpha=0.5,size=3)+
labs(y = judgment_type, x = 'trial')+
scale_x_continuous(breaks = 0:15,labels = 0:15)+
theme_bw()+
theme(text = element_text(size = 30),
panel.grid = element_blank())
ggsave(paste0("../../figures/plots/",judgment_type,"_judgments_model.pdf"),width=12,height=4)
# Load packages  ------------------------------------------------------------------------------
library(tidyjson)
library(magrittr)
library(stringr)
library(RSQLite)
library(Hmisc)
library(corrr)
library(tidyverse)
# Misc functions ------------------------------------------------------------------------------
#RMSE
rmse = function(x,y){
return(sqrt(mean((x-y)^2)))
}
# Read in and structure data ------------------------------------------------------------------
con = dbConnect(SQLite(),dbname = "../../data/participants.db");
# df.data = dbReadTable(con,"counterfactual_similarity")
df.data = dbReadTable(con,"unpacking_responsibility")
dbDisconnect(con)
#filter out incompletes
df.data = df.data %>%
filter(status %in% 3:5) %>%
filter(!str_detect(uniqueid,'debug'))
# demographic data
df.demographics = df.data$datastring %>%
spread_values(condition = jnumber('condition'),
age = jnumber('questiondata','age'),
gender = jstring('questiondata','sex'),
feedback = jstring('questiondata','feedback')
) %>%
rename(participant = document.id) %>%
mutate(time = difftime(df.data$endhit,df.data$beginhit,units = 'mins'))
variables = c('trial','prediction','counterbalance','responsibility_1','responsibility_2')
# trial data
df.long = df.data$datastring %>%
as.tbl_json() %>%
spread_values(participant = jstring('workerId')) %>%
enter_object('data') %>%
gather_array('order') %>%
enter_object('trialdata') %>%
gather_array('index') %>%
append_values_string('values') %>%
as.data.frame() %>%
filter(!values %in% c('id','type','predict','prior','counterbalance','NA','right','left','judgement')) %>%
spread(index,values) %>%
select(-c(document.id,order)) %>%
setNames(c('participant','trial','rating')) %>%
mutate(index = rep(c('criticality','responsibility'),nrow(.)/2)) %>%
# spread(index,rating) %>%
mutate(trial = trial %>% as.character() %>% as.numeric(),
participant = factor(participant) %>% as.numeric(),
rating = as.numeric(rating)) %>%
select(participant,trial,index,rating) %>%
arrange(participant,trial)
# Read in model predictions  ------------------------------------------------------------------
df.model = read.csv("../../data/model.csv") %>%
spread(index,rating)
# Regression & stats ----------------------------------------------------------------------------------
df.regression = df.long %>%
group_by(trial,index) %>%
summarise(mean = mean(rating),
low = smean.cl.boot(rating)[2],
high = smean.cl.boot(rating)[3]
) %>%
left_join(df.model)
df.responsibility = df.regression %>%
ungroup() %>%
filter(index == 'responsibility') %>%
mutate(mean = mean/100) %>%
mutate(prediction.alternative = glm(mean~alternative,data=.,family=binomial(link='logit'))$fitted.values,
prediction.newmodel = glm(mean~newmodel,data=.,family=binomial(link='logit'))$fitted.values)
# prediction.newmodel = glm(mean~newmodel+criticality,data=.,family=binomial(link='logit'))$fitted.values)
df.responsibility %>%
select(mean,prediction.alternative,prediction.newmodel) %>%
# correlate()
summarise(r.alternative = cor(mean,prediction.alternative),
rmse.alternative = rmse(mean*100,prediction.alternative*100),
r.newmodel = cor(mean,prediction.newmodel),
rmse.newmodel = rmse(mean*100,prediction.newmodel*100)
) %>%
mutate_all(funs(round(.,2)))
df.criticality = df.regression %>%
ungroup() %>%
filter(index == 'criticality') %>%
mutate(mean = mean/100) %>%
mutate(prediction.criticality = glm(mean~criticality,data=.,family=binomial(link='logit'))$fitted.values)
df.criticality %>%
select(mean,prediction.criticality) %>%
# correlate()
summarise(r.criticality = cor(mean,prediction.criticality),
rmse.criticality = rmse(mean*100,prediction.criticality*100)
) %>%
mutate_all(funs(round(.,2)))
# Plot: Just data  -------------------------------------------------------------------------------
judgment_type = 'responsibility'
# judgment_type = 'criticality'
df.long %>%
filter(index == judgment_type) %>%
ggplot(aes(x=trial,y=rating))+
stat_summary(fun.data = mean_cl_boot, geom = 'linerange', size = 0.5)+
stat_summary(fun.y = mean, geom = 'line', size = 1)+
stat_summary(fun.y = mean, geom = 'point', size = 2)+
geom_point(alpha = 0.2, position = position_jitter(width = 0.1, height = 0))+
# geom_line(aes(group=participant),size=0.5,alpha=0.2)+
labs(y = judgment_type, x = 'trial')+
scale_x_continuous(breaks = 0:15,labels = 0:15)+
theme_bw()+
theme(text = element_text(size = 30),
panel.grid = element_blank())
# ggsave(paste0("../../figures/plots/",judgment_type,"_judgments.pdf"),width=12,height=4)
# Plot: Responsibility judgments with models  -------------------------------------------------------------------------------
judgment_type = 'responsibility'
df.long %>%
filter(index == judgment_type) %>%
ggplot(aes(x=trial,y=rating))+
stat_summary(fun.data = mean_cl_boot, geom = 'linerange', size = 0.5)+
stat_summary(fun.y = mean, geom = 'line', size = 1)+
stat_summary(fun.y = mean, geom = 'point', size = 2)+
geom_point(alpha = 0.2, position = position_jitter(width = 0.1, height = 0))+
# geom_line(aes(group=participant),size=0.5,alpha=0.2)+
geom_line(aes(x = trial, y = prediction.alternative*100),data=df.responsibility,color='red',alpha=0.5,size=2)+
geom_point(aes(x = trial, y = prediction.alternative*100),data=df.responsibility,color='red',alpha=0.5,size=3)+
geom_line(aes(x = trial, y = prediction.newmodel*100),data=df.responsibility,color='blue',alpha=0.5,size=2)+
geom_point(aes(x = trial, y = prediction.newmodel*100),data=df.responsibility,color='blue',alpha=0.5,size=3)+
labs(y = judgment_type, x = 'trial')+
scale_x_continuous(breaks = 0:15,labels = 0:15)+
theme_bw()+
theme(text = element_text(size = 30),
panel.grid = element_blank())
# ggsave(paste0("../../figures/plots/",judgment_type,"_judgments_model.pdf"),width=12,height=4)
# Plot: Criticality judgments with model  -------------------------------------------------------------------------------
judgment_type = 'criticality'
df.long %>%
filter(index == judgment_type) %>%
ggplot(aes(x=trial,y=rating))+
stat_summary(fun.data = mean_cl_boot, geom = 'linerange', size = 0.5)+
stat_summary(fun.y = mean, geom = 'line', size = 1)+
stat_summary(fun.y = mean, geom = 'point', size = 2)+
geom_point(alpha = 0.2, position = position_jitter(width = 0.1, height = 0))+
# geom_line(aes(group=participant),size=0.5,alpha=0.2)+
geom_line(aes(x = trial, y = prediction.criticality*100),data=df.criticality,color='green',alpha=0.5,size=2)+
geom_point(aes(x = trial, y = prediction.criticality*100),data=df.criticality,color='green',alpha=0.5,size=3)+
labs(y = judgment_type, x = 'trial')+
scale_x_continuous(breaks = 0:15,labels = 0:15)+
theme_bw()+
theme(text = element_text(size = 30),
panel.grid = element_blank())
ggsave(paste0("../../figures/plots/",judgment_type,"_judgments_model.pdf"),width=12,height=4)
# Load packages  ------------------------------------------------------------------------------
library(tidyjson)
library(magrittr)
library(stringr)
library(RSQLite)
library(Hmisc)
library(corrr)
library(tidyverse)
# Misc functions ------------------------------------------------------------------------------
#RMSE
rmse = function(x,y){
return(sqrt(mean((x-y)^2)))
}
# Read in and structure data ------------------------------------------------------------------
con = dbConnect(SQLite(),dbname = "../../data/participants.db");
# df.data = dbReadTable(con,"counterfactual_similarity")
df.data = dbReadTable(con,"unpacking_responsibility")
dbDisconnect(con)
#filter out incompletes
df.data = df.data %>%
filter(status %in% 3:5) %>%
filter(!str_detect(uniqueid,'debug'))
# demographic data
df.demographics = df.data$datastring %>%
spread_values(condition = jnumber('condition'),
age = jnumber('questiondata','age'),
gender = jstring('questiondata','sex'),
feedback = jstring('questiondata','feedback')
) %>%
rename(participant = document.id) %>%
mutate(time = difftime(df.data$endhit,df.data$beginhit,units = 'mins'))
variables = c('trial','prediction','counterbalance','responsibility_1','responsibility_2')
# trial data
df.long = df.data$datastring %>%
as.tbl_json() %>%
spread_values(participant = jstring('workerId')) %>%
enter_object('data') %>%
gather_array('order') %>%
enter_object('trialdata') %>%
gather_array('index') %>%
append_values_string('values') %>%
as.data.frame() %>%
filter(!values %in% c('id','type','predict','prior','counterbalance','NA','right','left','judgement')) %>%
spread(index,values) %>%
select(-c(document.id,order)) %>%
setNames(c('participant','trial','rating')) %>%
mutate(index = rep(c('criticality','responsibility'),nrow(.)/2)) %>%
# spread(index,rating) %>%
mutate(trial = trial %>% as.character() %>% as.numeric(),
participant = factor(participant) %>% as.numeric(),
rating = as.numeric(rating)) %>%
select(participant,trial,index,rating) %>%
arrange(participant,trial)
# Read in model predictions  ------------------------------------------------------------------
df.model = read.csv("../../data/model.csv") %>%
spread(index,rating)
# Regression & stats ----------------------------------------------------------------------------------
df.regression = df.long %>%
group_by(trial,index) %>%
summarise(mean = mean(rating),
low = smean.cl.boot(rating)[2],
high = smean.cl.boot(rating)[3]
) %>%
left_join(df.model)
df.responsibility = df.regression %>%
ungroup() %>%
filter(index == 'responsibility') %>%
mutate(mean = mean/100) %>%
mutate(prediction.alternative = glm(mean~alternative,data=.,family=binomial(link='logit'))$fitted.values,
prediction.newmodel = glm(mean~newmodel,data=.,family=binomial(link='logit'))$fitted.values)
# prediction.newmodel = glm(mean~newmodel+criticality,data=.,family=binomial(link='logit'))$fitted.values)
df.responsibility %>%
select(mean,prediction.alternative,prediction.newmodel) %>%
# correlate()
summarise(r.alternative = cor(mean,prediction.alternative),
rmse.alternative = rmse(mean*100,prediction.alternative*100),
r.newmodel = cor(mean,prediction.newmodel),
rmse.newmodel = rmse(mean*100,prediction.newmodel*100)
) %>%
mutate_all(funs(round(.,2)))
df.criticality = df.regression %>%
ungroup() %>%
filter(index == 'criticality') %>%
mutate(mean = mean/100) %>%
mutate(prediction.criticality = glm(mean~criticality,data=.,family=binomial(link='logit'))$fitted.values)
df.criticality %>%
select(mean,prediction.criticality) %>%
# correlate()
summarise(r.criticality = cor(mean,prediction.criticality),
rmse.criticality = rmse(mean*100,prediction.criticality*100)
) %>%
mutate_all(funs(round(.,2)))
# Plot: Just data  -------------------------------------------------------------------------------
judgment_type = 'responsibility'
# judgment_type = 'criticality'
df.long %>%
filter(index == judgment_type) %>%
ggplot(aes(x=trial,y=rating))+
stat_summary(fun.data = mean_cl_boot, geom = 'linerange', size = 0.5)+
stat_summary(fun.y = mean, geom = 'line', size = 1)+
stat_summary(fun.y = mean, geom = 'point', size = 2)+
geom_point(alpha = 0.2, position = position_jitter(width = 0.1, height = 0))+
# geom_line(aes(group=participant),size=0.5,alpha=0.2)+
labs(y = judgment_type, x = 'trial')+
scale_x_continuous(breaks = 0:15,labels = 0:15)+
theme_bw()+
theme(text = element_text(size = 30),
panel.grid = element_blank())
# ggsave(paste0("../../figures/plots/",judgment_type,"_judgments.pdf"),width=12,height=4)
# Plot: Responsibility judgments with models  -------------------------------------------------------------------------------
judgment_type = 'responsibility'
df.long %>%
filter(index == judgment_type) %>%
ggplot(aes(x=trial,y=rating))+
stat_summary(fun.data = mean_cl_boot, geom = 'linerange', size = 0.5)+
stat_summary(fun.y = mean, geom = 'line', size = 1)+
stat_summary(fun.y = mean, geom = 'point', size = 2)+
geom_point(alpha = 0.2, position = position_jitter(width = 0.1, height = 0))+
# geom_line(aes(group=participant),size=0.5,alpha=0.2)+
geom_line(aes(x = trial, y = prediction.alternative*100),data=df.responsibility,color='red',alpha=0.5,size=2)+
geom_point(aes(x = trial, y = prediction.alternative*100),data=df.responsibility,color='red',alpha=0.5,size=3)+
geom_line(aes(x = trial, y = prediction.newmodel*100),data=df.responsibility,color='blue',alpha=0.5,size=2)+
geom_point(aes(x = trial, y = prediction.newmodel*100),data=df.responsibility,color='blue',alpha=0.5,size=3)+
labs(y = judgment_type, x = 'trial')+
scale_x_continuous(breaks = 0:15,labels = 0:15)+
theme_bw()+
theme(text = element_text(size = 30),
panel.grid = element_blank())
# ggsave(paste0("../../figures/plots/",judgment_type,"_judgments_model.pdf"),width=12,height=4)
# Plot: Criticality judgments with model  -------------------------------------------------------------------------------
judgment_type = 'criticality'
df.long %>%
filter(index == judgment_type) %>%
ggplot(aes(x=trial,y=rating))+
stat_summary(fun.data = mean_cl_boot, geom = 'linerange', size = 0.5)+
stat_summary(fun.y = mean, geom = 'line', size = 1)+
stat_summary(fun.y = mean, geom = 'point', size = 2)+
geom_point(alpha = 0.2, position = position_jitter(width = 0.1, height = 0))+
# geom_line(aes(group=participant),size=0.5,alpha=0.2)+
geom_line(aes(x = trial, y = prediction.criticality*100),data=df.criticality,color='green',alpha=0.5,size=2)+
geom_point(aes(x = trial, y = prediction.criticality*100),data=df.criticality,color='green',alpha=0.5,size=3)+
labs(y = judgment_type, x = 'trial')+
scale_x_continuous(breaks = 0:15,labels = 0:15)+
theme_bw()+
theme(text = element_text(size = 30),
panel.grid = element_blank())
ggsave(paste0("../../figures/plots/",judgment_type,"_judgments_model.pdf"),width=12,height=4)
# Load packages  ------------------------------------------------------------------------------
library(tidyjson)
library(magrittr)
library(stringr)
library(RSQLite)
library(Hmisc)
library(corrr)
library(tidyverse)
# Misc functions ------------------------------------------------------------------------------
#RMSE
rmse = function(x,y){
return(sqrt(mean((x-y)^2)))
}
# Read in and structure data ------------------------------------------------------------------
con = dbConnect(SQLite(),dbname = "../../data/participants.db");
# df.data = dbReadTable(con,"counterfactual_similarity")
df.data = dbReadTable(con,"unpacking_responsibility")
dbDisconnect(con)
#filter out incompletes
df.data = df.data %>%
filter(status %in% 3:5) %>%
filter(!str_detect(uniqueid,'debug'))
# demographic data
df.demographics = df.data$datastring %>%
spread_values(condition = jnumber('condition'),
age = jnumber('questiondata','age'),
gender = jstring('questiondata','sex'),
feedback = jstring('questiondata','feedback')
) %>%
rename(participant = document.id) %>%
mutate(time = difftime(df.data$endhit,df.data$beginhit,units = 'mins'))
variables = c('trial','prediction','counterbalance','responsibility_1','responsibility_2')
# trial data
df.long = df.data$datastring %>%
as.tbl_json() %>%
spread_values(participant = jstring('workerId')) %>%
enter_object('data') %>%
gather_array('order') %>%
enter_object('trialdata') %>%
gather_array('index') %>%
append_values_string('values') %>%
as.data.frame() %>%
filter(!values %in% c('id','type','predict','prior','counterbalance','NA','right','left','judgement')) %>%
spread(index,values) %>%
select(-c(document.id,order)) %>%
setNames(c('participant','trial','rating')) %>%
mutate(index = rep(c('criticality','responsibility'),nrow(.)/2)) %>%
# spread(index,rating) %>%
mutate(trial = trial %>% as.character() %>% as.numeric(),
participant = factor(participant) %>% as.numeric(),
rating = as.numeric(rating)) %>%
select(participant,trial,index,rating) %>%
arrange(participant,trial)
# Read in model predictions  ------------------------------------------------------------------
df.model = read.csv("../../data/model.csv") %>%
spread(index,rating)
# Regression & stats ----------------------------------------------------------------------------------
df.regression = df.long %>%
group_by(trial,index) %>%
summarise(mean = mean(rating),
low = smean.cl.boot(rating)[2],
high = smean.cl.boot(rating)[3]
) %>%
left_join(df.model)
df.responsibility = df.regression %>%
ungroup() %>%
filter(index == 'responsibility') %>%
mutate(mean = mean/100) %>%
mutate(prediction.alternative = glm(mean~alternative,data=.,family=binomial(link='logit'))$fitted.values,
prediction.newmodel = glm(mean~newmodel,data=.,family=binomial(link='logit'))$fitted.values)
# prediction.newmodel = glm(mean~newmodel+criticality,data=.,family=binomial(link='logit'))$fitted.values)
df.responsibility %>%
select(mean,prediction.alternative,prediction.newmodel) %>%
# correlate()
summarise(r.alternative = cor(mean,prediction.alternative),
rmse.alternative = rmse(mean*100,prediction.alternative*100),
r.newmodel = cor(mean,prediction.newmodel),
rmse.newmodel = rmse(mean*100,prediction.newmodel*100)
) %>%
mutate_all(funs(round(.,2)))
df.criticality = df.regression %>%
ungroup() %>%
filter(index == 'criticality') %>%
mutate(mean = mean/100) %>%
mutate(prediction.criticality = glm(mean~criticality,data=.,family=binomial(link='logit'))$fitted.values)
df.criticality %>%
select(mean,prediction.criticality) %>%
# correlate()
summarise(r.criticality = cor(mean,prediction.criticality),
rmse.criticality = rmse(mean*100,prediction.criticality*100)
) %>%
mutate_all(funs(round(.,2)))
# Plot: Just data  -------------------------------------------------------------------------------
judgment_type = 'responsibility'
# judgment_type = 'criticality'
df.long %>%
filter(index == judgment_type) %>%
ggplot(aes(x=trial,y=rating))+
stat_summary(fun.data = mean_cl_boot, geom = 'linerange', size = 0.5)+
stat_summary(fun.y = mean, geom = 'line', size = 1)+
stat_summary(fun.y = mean, geom = 'point', size = 2)+
geom_point(alpha = 0.2, position = position_jitter(width = 0.1, height = 0))+
# geom_line(aes(group=participant),size=0.5,alpha=0.2)+
labs(y = judgment_type, x = 'trial')+
scale_x_continuous(breaks = 0:15,labels = 0:15)+
theme_bw()+
theme(text = element_text(size = 30),
panel.grid = element_blank())
# ggsave(paste0("../../figures/plots/",judgment_type,"_judgments.pdf"),width=12,height=4)
# Plot: Responsibility judgments with models  -------------------------------------------------------------------------------
judgment_type = 'responsibility'
df.long %>%
filter(index == judgment_type) %>%
ggplot(aes(x=trial,y=rating))+
stat_summary(fun.data = mean_cl_boot, geom = 'linerange', size = 0.5)+
stat_summary(fun.y = mean, geom = 'line', size = 1)+
stat_summary(fun.y = mean, geom = 'point', size = 2)+
geom_point(alpha = 0.2, position = position_jitter(width = 0.1, height = 0))+
# geom_line(aes(group=participant),size=0.5,alpha=0.2)+
geom_line(aes(x = trial, y = prediction.alternative*100),data=df.responsibility,color='red',alpha=0.5,size=2)+
geom_point(aes(x = trial, y = prediction.alternative*100),data=df.responsibility,color='red',alpha=0.5,size=3)+
geom_line(aes(x = trial, y = prediction.newmodel*100),data=df.responsibility,color='blue',alpha=0.5,size=2)+
geom_point(aes(x = trial, y = prediction.newmodel*100),data=df.responsibility,color='blue',alpha=0.5,size=3)+
labs(y = judgment_type, x = 'trial')+
scale_x_continuous(breaks = 0:15,labels = 0:15)+
theme_bw()+
theme(text = element_text(size = 30),
panel.grid = element_blank())
# ggsave(paste0("../../figures/plots/",judgment_type,"_judgments_model.pdf"),width=12,height=4)
# Plot: Criticality judgments with model  -------------------------------------------------------------------------------
judgment_type = 'criticality'
df.long %>%
filter(index == judgment_type) %>%
ggplot(aes(x=trial,y=rating))+
stat_summary(fun.data = mean_cl_boot, geom = 'linerange', size = 0.5)+
stat_summary(fun.y = mean, geom = 'line', size = 1)+
stat_summary(fun.y = mean, geom = 'point', size = 2)+
geom_point(alpha = 0.2, position = position_jitter(width = 0.1, height = 0))+
# geom_line(aes(group=participant),size=0.5,alpha=0.2)+
geom_line(aes(x = trial, y = prediction.criticality*100),data=df.criticality,color='green',alpha=0.5,size=2)+
geom_point(aes(x = trial, y = prediction.criticality*100),data=df.criticality,color='green',alpha=0.5,size=3)+
labs(y = judgment_type, x = 'trial')+
scale_x_continuous(breaks = 0:15,labels = 0:15)+
theme_bw()+
theme(text = element_text(size = 30),
panel.grid = element_blank())
ggsave(paste0("../../figures/plots/",judgment_type,"_judgments_model.pdf"),width=12,height=4)
